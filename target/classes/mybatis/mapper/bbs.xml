<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bbs">
	<resultMap type="mybatis.vo.BbsVO" id="map1">
		<id property="b_idx" column="b_idx"/>
		<collection property="c_list" ofType="mybatis.vo.CommVO" 
			select="commList" column="b_idx"/> 
	</resultMap>
	
	<!-- 특정 게시물의 기본키인 b_idx를 받아서 해당 게시물에 댓글들을 모두 반환한다. -->
	<select id="commList" parameterType="String" resultType="mybatis.vo.CommVO">
		SELECT *FROM comment_t
		WHERE b_idx = #{b_idx}
	</select>
	
  <select id="list" parameterType="Map" resultMap="map1" >
  SELECT * FROM(
  	SELECT rownum r_num,a.* FROM(
	  	SELECT * FROM bbs_t
	  	WHERE status = 0 AND bname = #{bname}
	  	ORDER BY b_idx DESC
	) a
	) WHERE r_num  BETWEEN #{begin} AND #{end} 
  </select>
  
  <select id="totalCount" resultType="int" parameterType="String">
  	SELECT COUNT (*) FROM bbs_t
  	WHERE status = 0 AND bname = #{bname}
  </select>
  
  <select id="getBbs" resultMap="map1" parameterType="String">
  	SELECT * FROM bbs_t
  	WHERE b_idx = #{b_idx}
  </select>
  
  <!-- 원글을 저장하는 기능 -->
  <insert id="add" parameterType="mybatis.vo.BbsVO">
			INSERT INTO bbs_t(b_idx, subject, writer, content,
			file_name, ori_name, pwd, write_date, ip, hit, status, bname)
		VALUES(bbs_t_seq.NEXTVAL, #{subject}, #{writer}, #{content},
			#{file_name, jdbcType=VARCHAR}, #{ori_name, jdbcType=VARCHAR}, #{pwd}, sysdate, #{ip}, 0, 0, #{bname})
	</insert>
	
	<update id="edit" parameterType="mybatis.vo.BbsVO">
		UPDATE bbs_t
		SET subject = #{subject},
			content = #{content},
			ip = #{ip},
			#{file_name, jdbcType=VARCHAR}
			WHERE b_idx = #{b_idx} AND pwd = #{pwd}
	</update>
	
	<update id="del" parameterType="String">
		UPDATE bbs_t
		SET status = 1
		WHERE b_idx = #{b_idx}
	</update>
	
</mapper>